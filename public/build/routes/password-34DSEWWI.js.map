{
  "version": 3,
  "sources": ["../../../app/routes/password.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\password.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\password.tsx\");\n  import.meta.hot.lastModified = \"1741906251993.28\";\n}\n// REMIX HMR END\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useSearchParams } from \"@remix-run/react\";\nimport { Eye, EyeOff } from \"lucide-react\";\nimport { resetPasswordRequest } from \"~/utils/authApi\";\nexport default function Password() {\n  _s();\n  const [formData, setFormData] = useState({\n    newPassword: \"\",\n    confirmPassword: \"\"\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [focused, setFocused] = useState(null);\n  const [errors, setErrors] = useState({\n    newPassword: \"\",\n    confirmPassword: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const [apiError, setApiError] = useState(\"\");\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get(\"token\");\n  useEffect(() => {\n    if (!token) {\n      setApiError(\"Token inv\u00E1lido o expirado.\");\n    }\n  }, [token]);\n  const validatePasswords = () => {\n    let newErrors = {\n      newPassword: \"\",\n      confirmPassword: \"\"\n    };\n    let valid = true;\n    if (!formData.newPassword) {\n      newErrors.newPassword = \"Ingrese una nueva contrase\u00F1a\";\n      valid = false;\n    }\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = \"Confirme su contrase\u00F1a\";\n      valid = false;\n    } else if (formData.confirmPassword !== formData.newPassword) {\n      newErrors.confirmPassword = \"Las contrase\u00F1as no coinciden\";\n      valid = false;\n    }\n    setErrors(newErrors);\n    return valid;\n  };\n  const handleSubmit = async () => {\n    setMessage(\"\");\n    setApiError(\"\");\n    if (!validatePasswords() || !token) return;\n    try {\n      const response = await resetPasswordRequest(token, formData.newPassword, formData.confirmPassword);\n      setMessage(response.message || \"Contrase\u00F1a restablecida correctamente\");\n      setTimeout(() => {\n        navigate(\"/login\");\n      }, 3000);\n    } catch (error) {\n      setApiError(error.message);\n    }\n  };\n  return <div className=\"h-screen flex flex-col items-center justify-center bg-sky-50 px-4\">\r\n      <div className=\"w-full max-w-md bg-white shadow-2xl p-8 rounded-3xl transform transition duration-300 hover:scale-105\">\r\n        <div className=\"flex justify-center mb-6\">\r\n          <img src=\"/images/logos/Horizontal_blue.png\" alt=\"Logo\" className=\"w-40\" />\r\n        </div>\r\n        <h1 className=\"text-2xl font-bold text-[#0047BA] text-center mb-6\">\r\n          Nueva Contrase\u00F1a\r\n        </h1>\r\n\r\n        {apiError && <p className=\"text-red-500 text-xs text-center mb-4\">{apiError}</p>}\r\n        {message && <p className=\"text-green-500 text-xs text-center mb-4\">{message}</p>}\r\n\r\n        {/* Campo de nueva contrase\u00F1a */}\r\n        <div className=\"relative mb-6\">\r\n          <input type={showPassword ? \"text\" : \"password\"} name=\"newPassword\" value={formData.newPassword} onChange={e => setFormData({\n          ...formData,\n          newPassword: e.target.value\n        })} onFocus={() => setFocused(\"newPassword\")} onBlur={() => setFocused(null)} className=\"peer w-full bg-white border-b-2 text-sm text-black p-3 focus:outline-none transition-all border-gray-400 focus:border-[#0047BA]\" />\r\n          <label className={`absolute left-3 transition-all text-black ${formData.newPassword || focused === \"newPassword\" ? \"-top-2 text-xs text-[#0047BA]\" : \"top-3\"}`}>\r\n            Nueva contrase\u00F1a\r\n          </label>\r\n          <button type=\"button\" onClick={() => setShowPassword(!showPassword)} className=\"absolute right-3 top-3 text-gray-500 hover:text-[#0047BA] transition-all\">\r\n            {showPassword ? <EyeOff size={20} /> : <Eye size={20} />}\r\n          </button>\r\n          {errors.newPassword && <p className=\"text-red-500 text-xs mt-1\">{errors.newPassword}</p>}\r\n        </div>\r\n\r\n        {/* Campo de confirmaci\u00F3n de contrase\u00F1a */}\r\n        <div className=\"relative mb-6\">\r\n          <input type=\"password\" name=\"confirmPassword\" value={formData.confirmPassword} onChange={e => setFormData({\n          ...formData,\n          confirmPassword: e.target.value\n        })} onFocus={() => setFocused(\"confirmPassword\")} onBlur={() => setFocused(null)} className=\"peer w-full bg-white border-b-2 text-sm text-black p-3 focus:outline-none transition-all border-gray-400 focus:border-[#0047BA]\" />\r\n          <label className={`absolute left-3 transition-all text-black ${formData.confirmPassword || focused === \"confirmPassword\" ? \"-top-2 text-xs text-[#0047BA]\" : \"top-3\"}`}>\r\n            Confirmar contrase\u00F1a\r\n          </label>\r\n          {errors.confirmPassword && <p className=\"text-red-500 text-xs mt-1\">{errors.confirmPassword}</p>}\r\n        </div>\r\n\r\n        {/* Bot\u00F3n de aceptar */}\r\n        <button className=\"w-full text-white py-3 bg-[#0047BA] rounded-lg hover:scale-105 transition-all\" onClick={handleSubmit}>\r\n          Aceptar\r\n        </button>\r\n\r\n        {/* Volver al Login */}\r\n        <div className=\"text-center mt-4\">\r\n          <button onClick={() => navigate(\"/login\")} className=\"text-sm text-blue-600 hover:underline transition-all\">\r\n            Volver al inicio de sesi\u00F3n\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(Password, \"/mZW9Zq+H7w1HVekeI40F2/UkQY=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = Password;\nvar _c;\n$RefreshReg$(_c, \"Password\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
